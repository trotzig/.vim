#!/usr/bin/env bash

set +e

is_commit_hash() {
  case $1 in
    ( *[!0-9A-Fa-f]* | "" ) return 1 ;;
    ( * )
      local length=${#1}
      [ $length -ge 7 ] && [ $length -le 40 ] && return 0 || return 1
  esac
}

is_tag() {
  ref=$1
  git show-ref --tags $ref >/dev/null 2>&1
}

commit_hash() {
  ref=$1
  echo `git rev-list $ref 2>/dev/null | head -n 1`
}

# Installs and ensures all plugins are up-to-date
update_plugins () {
  local bundle_dir='bundles'
  mkdir -p "$bundle_dir"

  grep -v '^$' plugins.list | while read url revision; do
    if [ -z "$url" ]; then
      continue # Empty
    fi
    local plugin=`basename $url`
    plugin=${plugin%.git}

    # Default revision is origin/master
    if [ -z "$revision" ]; then
      revision="origin/master"
    fi

    local plugin_dir="$bundle_dir/$plugin"

    # Ensure repository exists
    if [ ! -d "$plugin_dir" ]; then
      git clone $url "$plugin_dir"
    fi

    # Execute in subshell to isolate changes to plugin directory
    (
      cd $plugin_dir
      cur_revision=`commit_hash HEAD`
      commit=`commit_hash $revision`

      if is_tag $revision && [ $cur_revision = "$commit" ]; then
        exit # Already set to tag
      fi

      # Any ref (like `master` or some other branch) could have been updated
      # remotely, so fetch from origin and try to update the ref
      if ! is_commit_hash $revision; then
        git fetch origin >/dev/null 2>&1
        new_commit=`commit_hash $revision`

        if [ "$new_commit" != "$commit" ]; then
          commit=$new_commit
        fi
      fi

      if [ -z "$commit" ]; then
        # Revision wasn't found; try fetching latest
        git fetch origin

        commit=`commit_hash $revision`

        if [ -z "$commit" ]; then
          echo "Commit, ref, or tag '$revision' does not exist."
          exit 1
        fi
      fi

      if [ $cur_revision != "$commit" ]; then
        echo "Updating $plugin from $cur_revision to $commit"
        git reset --hard $commit >/dev/null
      fi
    )
  done

  for plugin_name in `ls $bundle_dir`; do
    if [ $(grep -cF $plugin_name plugins.list) -eq 0 ]; then
      echo "Would have been removing '$plugin_name' since it is not in plugins.list"
      # rm -rf "$bundle_dir/$plugin_name"
    fi
  done
}

update_plugins && unset update_plugins
